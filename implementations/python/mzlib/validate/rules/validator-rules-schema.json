{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Semantic Validtion Rule Format",
    "description": "Specify how to semantically validate a format",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "rules"
    ],
    "properties": {
        "rules": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/scoped_semantic_rule"
            }
        },
        "name": {
            "type": "string",
            "description": "The name for the specific set of validation rules"
        }
    },
    "definitions": {
        "attribute_semantic_predicate": {
            "description": "A rule for evaluating an attribute-value pair",
            "required": [
                "name"
            ],
            "additionalProperties": true,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the rule",
                    "enum": [
                        "value_matches",
                        "value_is_unique",
                        "value_is_child_of",
                        "value_of_type",
                        "value_matches_pattern"
                    ]
                }
            }
        },
        "value_is_child_of_predicate": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/attribute_semantic_predicate"
                }
            ],
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "The accession of the term that children of are valid"
                }
            }
        },
        "value_of_type": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/attribute_semantic_predicate"
                }
            ],
            "properties": {
                "type_name": {
                    "type": "string",
                    "description": "The name of the expected type"
                }
            }
        },
        "value_is_unique": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/attribute_semantic_predicate"
                }
            ],
            "additionalProperties": false
        },
        "value_matches": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/attribute_semantic_predicate"
                }
            ],
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "The accession of the term that must be matched exactly"
                }
            }
        },
        "value_matches_pattern": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/attribute_semantic_predicate"
                }
            ],
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "The value of the term that must match this ECMAScript Regular Expression, interpreted as a string"
                }
            }
        },
        "semantic_attribute_rule": {
            "description": "An attribute to match",
            "required": [
                "accession"
            ],
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "The accession number for the controlled vocabulary term being used"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the controlled vocabulary term being used",
                    "default": null
                },
                "allow_children": {
                    "type": "boolean",
                    "description": "Whether or not this rule is allowed to match children of the named term",
                    "default": false
                },
                "repeatable": {
                    "type": "boolean",
                    "description": "Whether the rule may match the same attribute multiple times",
                    "default": false
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/value_is_child_of_predicate"
                        },
                        {
                            "$ref": "#/definitions/value_is_unique"
                        },
                        {
                            "$ref": "#/definitions/value_of_type"
                        },
                        {
                            "$ref": "#/definitions/value_matches"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "value_is_unique"
                            ]
                        }
                    ],
                    "default": null
                },
                "notes": {
                    "type": "string",
                    "description": "Free text describing the rule applicable to this attribute"
                }
            }
        },
        "scoped_semantic_rule": {
            "type": "object",
            "description": "A top-level rule expressing an expectation of attribute presence with optional constraints on its value",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique identifier for this rule"
                },
                "path": {
                    "type": "string",
                    "description": "A top-down contextual path from the start of this document to the object being checked",
                    "pattern": "(/[^/]+)+",
                    "examples": [
                        "/Library",
                        "/Library/Spectrum",
                        "/Library/Spectrum/Analyte"
                    ]
                },
                "attr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/semantic_attribute_rule"
                    }
                },
                "combination_logic": {
                    "type": "string",
                    "enum": [
                        "AND",
                        "OR",
                        "XOR"
                    ],
                    "default": "OR"
                },
                "requirement_level": {
                    "type": "string",
                    "enum": [
                        "MAY",
                        "SHOULD",
                        "MUST",
                        "REJECT"
                    ],
                    "default": "SHOULD"
                },
                "condition": {
                    "$ref": "#/definitions/semantic_attribute_rule"
                },
                "notes": {
                    "type": "string",
                    "description": "Free text describing this rule to a human reader"
                }
            }
        }
    }
}
